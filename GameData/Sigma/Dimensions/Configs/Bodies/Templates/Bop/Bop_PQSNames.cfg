// FlattenArea
@Kopernicus:HAS[@Body:HAS[@Template[Bop]:HAS[~removeAllPQSMods[True]],@PQS:HAS[@Mods:HAS[@FlattenArea:HAS[~SigmaDimensions[1]]]]]]:FOR[SigDim]
{
	@Body:HAS[@Template[Bop],@PQS:HAS[@Mods:HAS[@FlattenArea:HAS[~SigmaDimensions[1]]]]]
	{
		@PQS:HAS[@Mods:HAS[@FlattenArea:HAS[~SigmaDimensions[1]]]]
		{
			// process first node
			@Mods
			{
				@FlattenArea
				{
					%SigmaDimensions = 1
				}
			}
			// Set the name
			@Mods:HAS[!FlattenArea:HAS[#SigmaDimensions[1],#name[_Crater1]]]
			{
				@FlattenArea
				{
					&name = _Crater1
				}
			}
			// Set the name
			@Mods:HAS[!FlattenArea:HAS[#SigmaDimensions[1],#name[_Crater2]]]
			{
				@FlattenArea
				{
					&name = _Crater2
				}
			}
			// move processed node to the end
			@Mods
			{
				#FlattenArea {}
				!FlattenArea {}
			}
			// repeat untill all nodes have been processed
		}
	}
	MM_PATCH_LOOP {}
}

// MapDecal
@Kopernicus:HAS[@Body:HAS[@Template[Bop]:HAS[~removeAllPQSMods[True]],@PQS:HAS[@Mods:HAS[@MapDecal:HAS[~SigmaDimensions[1]]]]]]:FOR[SigDim]
{
	@Body:HAS[@Template[Bop],@PQS:HAS[@Mods:HAS[@MapDecal:HAS[~SigmaDimensions[1]]]]]
	{
		@PQS:HAS[@Mods:HAS[@MapDecal:HAS[~SigmaDimensions[1]]]]
		{
			// process first node
			@Mods
			{
				@MapDecal
				{
					%SigmaDimensions = 1
				}
			}
			// Set the name
			@Mods:HAS[!MapDecal:HAS[#SigmaDimensions[1],#name[_Crater1]]]
			{
				@MapDecal
				{
					&name = _Crater1
				}
			}
			// Set the name
			@Mods:HAS[!MapDecal:HAS[#SigmaDimensions[1],#name[_Crater2]]]
			{
				@MapDecal
				{
					&name = _Crater2
				}
			}
			// move processed node to the end
			@Mods
			{
				#MapDecal {}
				!MapDecal {}
			}
			// repeat untill all nodes have been processed
		}
	}
	MM_PATCH_LOOP {}
}

// VertexSimplexHeightAbsolute
@Kopernicus:HAS[@Body:HAS[@Template[Bop]:HAS[~removeAllPQSMods[True]],@PQS:HAS[@Mods:HAS[@VertexSimplexHeightAbsolute:HAS[~SigmaDimensions[1]]]]]]:FOR[SigDim]
{
	@Body:HAS[@Template[Bop],@PQS:HAS[@Mods:HAS[@VertexSimplexHeightAbsolute:HAS[~SigmaDimensions[1]]]]]
	{
		@PQS:HAS[@Mods:HAS[@VertexSimplexHeightAbsolute:HAS[~SigmaDimensions[1]]]]
		{
			// process first node
			@Mods
			{
				@VertexSimplexHeightAbsolute
				{
					%SigmaDimensions = 1
				}
			}
			// Set the name
			@Mods:HAS[!VertexSimplexHeightAbsolute:HAS[#SigmaDimensions[1],#name[_Height]]]
			{
				@VertexSimplexHeightAbsolute
				{
					&name = _Height
				}
			}
			// move processed node to the end
			@Mods
			{
				#VertexSimplexHeightAbsolute {}
				!VertexSimplexHeightAbsolute {}
			}
			// repeat untill all nodes have been processed
		}
	}
	MM_PATCH_LOOP {}
}

// VertexHeightNoise
@Kopernicus:HAS[@Body:HAS[@Template[Bop]:HAS[~removeAllPQSMods[True]],@PQS:HAS[@Mods:HAS[@VertexHeightNoise:HAS[~SigmaDimensions[1]]]]]]:FOR[SigDim]
{
	@Body:HAS[@Template[Bop],@PQS:HAS[@Mods:HAS[@VertexHeightNoise:HAS[~SigmaDimensions[1]]]]]
	{
		@PQS:HAS[@Mods:HAS[@VertexHeightNoise:HAS[~SigmaDimensions[1]]]]
		{
			// process first node
			@Mods
			{
				@VertexHeightNoise
				{
					%SigmaDimensions = 1
				}
			}
			// Set the name
			@Mods:HAS[!VertexHeightNoise:HAS[#SigmaDimensions[1],#name[_Height]]]
			{
				@VertexHeightNoise
				{
					&name = _Height
				}
			}
			// move processed node to the end
			@Mods
			{
				#VertexHeightNoise {}
				!VertexHeightNoise {}
			}
			// repeat untill all nodes have been processed
		}
	}
	MM_PATCH_LOOP {}
}

// AltitudeAlpha
@Kopernicus:HAS[@Body:HAS[@Template[Bop]:HAS[~removeAllPQSMods[True]],@PQS:HAS[@Mods:HAS[@AltitudeAlpha:HAS[~SigmaDimensions[1]]]]]]:FOR[SigDim]
{
	@Body:HAS[@Template[Bop],@PQS:HAS[@Mods:HAS[@AltitudeAlpha:HAS[~SigmaDimensions[1]]]]]
	{
		@PQS:HAS[@Mods:HAS[@AltitudeAlpha:HAS[~SigmaDimensions[1]]]]
		{
			// process first node
			@Mods
			{
				@AltitudeAlpha
				{
					%SigmaDimensions = 1
				}
			}
			// Set the name
			@Mods:HAS[!AltitudeAlpha:HAS[#SigmaDimensions[1],#name[_Material_ModProjection]]]
			{
				@AltitudeAlpha
				{
					&name = _Material_ModProjection
				}
			}
			// move processed node to the end
			@Mods
			{
				#AltitudeAlpha {}
				!AltitudeAlpha {}
			}
			// repeat untill all nodes have been processed
		}
	}
	MM_PATCH_LOOP {}
}

// LandControl
@Kopernicus:HAS[@Body:HAS[@Template[Bop]:HAS[~removeAllPQSMods[True]],@PQS:HAS[@Mods:HAS[@LandControl:HAS[~SigmaDimensions[1]]]]]]:FOR[SigDim]
{
	@Body:HAS[@Template[Bop],@PQS:HAS[@Mods:HAS[@LandControl:HAS[~SigmaDimensions[1]]]]]
	{
		@PQS:HAS[@Mods:HAS[@LandControl:HAS[~SigmaDimensions[1]]]]
		{
			// process first node
			@Mods
			{
				@LandControl
				{
					%SigmaDimensions = 1
				}
			}
			// Set the name
			@Mods:HAS[!LandControl:HAS[#SigmaDimensions[1],#name[Scatter]]]
			{
				@LandControl
				{
					&name = Scatter
				}
			}
			// move processed node to the end
			@Mods
			{
				#LandControl {}
				!LandControl {}
			}
			// repeat untill all nodes have been processed
		}
	}
	MM_PATCH_LOOP {}
}
