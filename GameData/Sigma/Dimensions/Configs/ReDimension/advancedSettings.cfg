// Check for missing and invalid variables

%SigmaDimensions {}

@SigmaDimensions:HAS[~Resize[<1],~Resize[>1]]:AFTER[SigDim]
{
	%Resize = 1
}
@SigmaDimensions:HAS[~Rescale[<1],~Rescale[>1]]:AFTER[SigDim]
{
	%Rescale = 1
}
@SigmaDimensions:HAS[~Atmosphere[<1],~Atmosphere[>1]]:AFTER[SigDim]
{
	%Atmosphere = 1
}
@SigmaDimensions:HAS[~dayLengthMultiplier[<1],~dayLengthMultiplier[>1]]:AFTER[SigDim]
{
	%dayLengthMultiplier = 1
}
@SigmaDimensions:HAS[~geeASLmultiplier[<1],~geeASLmultiplier[>1]]:AFTER[SigDim]
{
	%geeASLmultiplier = 1
}
@SigmaDimensions:HAS[~landscape[>0]]:AFTER[SigDim]
{
	%landscape = 1
}
@SigmaDimensions:HAS[~atmoVisualEffect[>0]]:AFTER[SigDim]
{
	%atmoVisualEffect = 1
}
@SigmaDimensions:HAS[~resizeScatter[0]]:AFTER[SigDim]
{
	%resizeScatter = 1
}
@SigmaDimensions:HAS[~SoIsFromRadius[0],~SoIsFromRadius[1]]:AFTER[SigDim]
{
	%SoIsFromRadius = 0
}
@SigmaDimensions:HAS[~RingsFromRadius[0],~RingsFromRadius[1]]:AFTER[SigDim]
{
	%RingsFromRadius = 0
}

// Create PlanetDimensions parameter

@SigmaDimensions:HAS[~PlanetDimensions[*]]:AFTER[SigDim]
{
	%PlanetDimensions = #$Resize$,$Rescale$,$Atmosphere$,$dayLengthMultiplier$,$geeASLmultiplier$,$landscape$,$atmoVisualEffect$,$resizeScatter$,$SoIsFromRadius$,$RingsFromRadius$
}
@Kopernicus:AFTER[SigDim]
{
	@Body:HAS[~PlanetDimensions[*]]
	{
		%PlanetDimensions = Resize,Rescale,Atmosphere,dayLengthMultiplier,geeASLmultiplier,landscape,atmoVisualEffect,resizeScatter,SoIsFromRadius,RingsFromRadius
	}
}

// Set PlanetDimensions for each planet

@Kopernicus:AFTER[SigDim]
{
	@Body:HAS[#PlanetDimensions[Resize,*]]
	{
		@PlanetDimensions[0] = #$@SigmaDimensions/PlanetDimensions[0]$
	}
	@Body:HAS[#PlanetDimensions[*,Rescale,*]]
	{
		@PlanetDimensions[1] = #$@SigmaDimensions/PlanetDimensions[1]$
	}
	@Body:HAS[#PlanetDimensions[*,Atmosphere,*]]
	{
		@PlanetDimensions[2] = #$@SigmaDimensions/PlanetDimensions[2]$
	}
	@Body:HAS[#PlanetDimensions[*,dayLengthMultiplier,*]]
	{
		@PlanetDimensions[3] = #$@SigmaDimensions/PlanetDimensions[3]$
	}
	@Body:HAS[#PlanetDimensions[*,geeASLmultiplier,*]]
	{
		@PlanetDimensions[4] = #$@SigmaDimensions/PlanetDimensions[4]$
	}
	@Body:HAS[#PlanetDimensions[*,landscape,*]]
	{
		@PlanetDimensions[5] = #$@SigmaDimensions/PlanetDimensions[5]$
	}
	@Body:HAS[#PlanetDimensions[*,atmoVisualEffect,*]]
	{
		@PlanetDimensions[6] = #$@SigmaDimensions/PlanetDimensions[6]$
	}
	@Body:HAS[#PlanetDimensions[*,resizeScatter,*]]
	{
		@PlanetDimensions[7] = #$@SigmaDimensions/PlanetDimensions[7]$
	}
	@Body:HAS[#PlanetDimensions[*,SoIsFromRadius,*]]
	{
		@PlanetDimensions[8] = #$@SigmaDimensions/PlanetDimensions[8]$
	}
	@Body:HAS[#PlanetDimensions[*,RingsFromRadius,*]]
	{
		@PlanetDimensions[9] = #$@SigmaDimensions/PlanetDimensions[9]$
	}
}

// Apply changes needed for advanced settings

@Kopernicus:AFTER[SigDim]
{
	@Body:HAS[#PlanetDimensions[*,*,*,*,*,*,*,*,1,*]]
	{
		@PlanetDimensions[8] = #$PlanetDimensions[0]$
	}
	@Body:HAS[#PlanetDimensions[*,*,*,*,*,*,*,*,0,*]]
	{
		@PlanetDimensions[8] = #$PlanetDimensions[1]$
	}
	@Body:HAS[#PlanetDimensions[*,0]]
	{
		@PlanetDimensions[9] = #$PlanetDimensions[1]$
		@PlanetDimensions[9] /= #$PlanetDimensions[0]$
	}
	@Body:HAS[#PlanetDimensions[*,*,*,*,*,*,*,0,*,*]]
	{
		@PlanetDimensions = #$PlanetDimensions$,1,$PlanetDimensions[0]$
		%CheckResize = #$PlanetDimensions[0]$
	}
	@Body:HAS[#CheckResize[>1]]
	{
		@PlanetDimensions[11] != 2
	}
	@Body:HAS[#CheckResize[<1]]
	{
		@PlanetDimensions[11] *= 0.5
		@PlanetDimensions[11] += 0.5
	}
	@Body:HAS[#PlanetDimensions[*,*,*,*,*,*,*,1,*,*],~CheckResize[*]]
	{
		@PlanetDimensions = #$PlanetDimensions$,$PlanetDimensions[0]$,$PlanetDimensions[0]$
		@PlanetDimensions[11] != 2
	}
	@Body:HAS[#CheckResize[*]]
	{
		!CheckResize = DEL
	}
	@Body:HAS[#PlanetDimensions[1,*,*,*,*,1,*,*,*,*,*,*]]
	{
		// NEEDS NEW CACHE = FALSE
		@PlanetDimensions = #$PlanetDimensions$,False
	}
	@Body:HAS[~PlanetDimensions[*False]]
	{
		// NEEDS NEW CACHE = TRUE
		@PlanetDimensions = #$PlanetDimensions$,True	
	}
}
